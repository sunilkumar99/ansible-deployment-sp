---
# tasks file for deploy_api
  - name: Disable Traffic on Selected Machine
    uri:
      url: "http://{{ inventory_hostname }}:8190/configure?traffic=off"
      follow_redirects: none
      method: GET
    register: _result
    delegate_to: 127.0.0.1
    ignore_errors: yes
  - name: Pausing for 60 seconds for connections to drain
    pause: seconds=60
  - name: Stopping ds backend service dsbackendservice
    service: name=dsbackendservice state=stopped
  - name: Copy enviroment config file to server
    copy:
      src: "{{ local_config_file_path }}"
      dest: "{{ remote_config_file_path }}"
      mode: 0644
      owner: root
      group: root
  - name: Remote Server private Ip Address
    debug:
      msg: This host user IP addredd {{ ansible_facts.default_ipv4.address }}
  - name: Replace String in file
    replace:
      path: "{{ remote_config_file_path }}/config.yml"
      regexp: __SERVER_IP__
      replace: "{{ ansible_facts.default_ipv4.address }}"
  - name: Copy Exacutable file file to server
    copy:
      src: '{{local_release_folder}}'
      dest: '{{remote_release_folder }}'
      mode: 0755
      owner: root
      group: root
  - name: Restart backend service dsbackendservice
    service: name=dsbackendservice state=restarted
  - name: Wait for port 8190 to Respond
    wait_for: port=8190 delay=2 timeout=150
  - name:  Wait for Healthecheckup to succeed
    delegate_to: 127.0.0.1
    uri:
      url: "http://{{ inventory_hostname }}:8190/healthcheck"
      follow_redirects: none
      method: GET
    register: result
    until: result.status == 200
    retries: 5
    delay: 5
    changed_when: false